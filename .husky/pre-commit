#!/usr/bin/env sh
set -e

# Professional logging with optional colors (avoid raw escape codes when unsupported)
USE_COLOR=0

# Force no color on Windows shells to avoid showing raw escape codes in cmd.exe/PowerShell
IS_WINDOWS=0
case "$(uname -s 2>/dev/null | tr '[:upper:]' '[:lower:]')" in
  msys*|mingw*|cygwin*) IS_WINDOWS=1 ;;
esac
if [ "${OS:-}" = "Windows_NT" ] || [ "$IS_WINDOWS" -eq 1 ]; then
  USE_COLOR=0
else
  if [ -t 1 ] && command -v tput >/dev/null 2>&1; then
    if [ "$(tput colors)" -ge 8 ] && [ "${NO_COLOR:-0}" = 0 ] && [ "${TERM:-}" != "dumb" ]; then
      USE_COLOR=1
    fi
  fi
fi

if [ "$USE_COLOR" -eq 1 ]; then
  GREEN='\033[0;32m'
  CYAN='\033[0;36m'
  YELLOW='\033[1;33m'
  BOLD='\033[1m'
  RESET='\033[0m'
else
  GREEN=''
  CYAN=''
  YELLOW=''
  BOLD=''
  RESET=''
fi

log() {
  printf "%süß™  %s%s\n" "$CYAN" "$1" "$RESET"
}

info() {
  printf "%s‚ÑπÔ∏è   %s%s\n" "$CYAN" "$1" "$RESET"
}

warn() {
  printf "%s‚ö†Ô∏è   %s%s\n" "$YELLOW" "$1" "$RESET"
}

ok() {
  printf "%s‚úÖ  %s%s\n" "$GREEN" "$1" "$RESET"
}

START_TS=$(date +%s)
TS_HUMAN=$(date '+%Y-%m-%d %H:%M:%S')
log "Husky pre-commit ‚Ä¢ Lint-Staged starting at $TS_HUMAN"

# List staged files of interest
STAGED_FILES=$(git diff --name-only --cached --diff-filter=ACMRT)

if [ -z "$STAGED_FILES" ]; then
  warn "No staged files detected ‚Äî skipping formatting."
  ok "Pre-commit checks skipped"
  exit 0
fi

COUNT=$(printf "%s" "$STAGED_FILES" | wc -l | tr -d ' ')
info "Staged files ($COUNT):"
printf "%s\n" "$STAGED_FILES" | sed 's/^/  ¬∑ /'

# Run lint-staged with verbose output
log "Running Prettier via lint-staged ‚ú®"
set +e
npx lint-staged --verbose
STATUS=$?
set -e
if [ $STATUS -ne 0 ]; then
  DURATION=$(( $(date +%s) - START_TS ))
  printf "%s‚ùå  Pre-commit checks failed in %ss%s\n" "$YELLOW" "$DURATION" "$RESET"
  exit $STATUS
fi

DURATION=$(( $(date +%s) - START_TS ))
ok "Pre-commit checks completed in ${DURATION}s üöÄ"