name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Clean old results
        run: node scripts/clean-allure-results.js

      - name: Run Playwright tests
        run: npx playwright test
        continue-on-error: true

      - name: Generate Allure report
        run: node scripts/generate-simple-report.js
        if: always()

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
          retention-days: 30

      - name: Upload report artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: github-pages
          path: ./allure-report
          retention-days: 30

      - name: Setup Pages
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && always()
        uses: actions/configure-pages@v4

      - name: Deploy report to GitHub Pages
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && always()
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages

      - name: Comment PR with report link
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Check if report was generated
            if (fs.existsSync('allure-report/index.html')) {
              const reportUrl = `https://${context.repo.owner}.github.io/${context.repo.repo}/`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## 📊 Test Report Generated
                
                **View the test report here:** [Open Report](${reportUrl})
                
                The report includes:
                - 📈 Test execution results
                - 🎥 Videos and screenshots for failed tests
                - 📊 Interactive pie chart with percentages
                - 🔍 Browser-specific filtering
                
                *Report will be available after deployment completes.*`
              });
            }
